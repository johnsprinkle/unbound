name: Docker Image CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 6' # Every Saturday at midnight

permissions:
  pull-requests: write
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' || (github.event_name == 'push' && github.ref != 'refs/heads/main') || (github.event_name == 'pull_request' && github.actor == 'dependabot[bot]')}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' || (github.event_name == 'push' && github.ref != 'refs/heads/main') || (github.event_name == 'pull_request' && github.actor == 'dependabot[bot]')}}
    steps:
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.0'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker build
        run: task build
      - name: Test
        run: task run test stop
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker push
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: task release -- ${{ github.run_id }}.${{ github.run_attempt }}

  bump-dependencies:
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' && github.ref != 'refs/heads/main' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        if: ${{contains(steps.metadata.outputs.dependency-names, 'alpine') }}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}